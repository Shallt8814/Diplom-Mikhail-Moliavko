{"name": "test_check_box", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector\nfrom javascript error: {\"status\":32,\"value\":\"Unable to locate an element with the xpath expression (//*[@class='rct-collapse rct-collapse-btn'])[2]) because of the following error:\\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '(//*[@class='rct-collapse rct-collapse-btn'])[2])' is not a valid XPath expression.\"}\n  (Session info: chrome=130.0.6723.116); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nStacktrace:\n#0 0x6421d5e356da <unknown>\n#1 0x6421d5949f80 <unknown>\n#2 0x6421d594fcee <unknown>\n#3 0x6421d5951995 <unknown>\n#4 0x6421d5951a1c <unknown>\n#5 0x6421d59967a5 <unknown>\n#6 0x6421d5996de1 <unknown>\n#7 0x6421d59dc174 <unknown>\n#8 0x6421d59babdd <unknown>\n#9 0x6421d59d969d <unknown>\n#10 0x6421d59ba953 <unknown>\n#11 0x6421d598972e <unknown>\n#12 0x6421d598a79e <unknown>\n#13 0x6421d5e00f1b <unknown>\n#14 0x6421d5e04eb8 <unknown>\n#15 0x6421d5dee42c <unknown>\n#16 0x6421d5e05a37 <unknown>\n#17 0x6421d5dd2fef <unknown>\n#18 0x6421d5e23ad8 <unknown>\n#19 0x6421d5e23ca0 <unknown>\n#20 0x6421d5e34556 <unknown>\n#21 0x7c2b2ae9ca94 <unknown>\n#22 0x7c2b2af29c3c <unknown>", "trace": "@allure.story('проверка сайта')\n    @allure.feature('проверка чекбоксов')\n    def test_check_box():\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        driver.get(\"https://demoqa.com/checkbox\")\n    \n        check_box_home_1 = driver.find_element(By.XPATH, \"//*[@class='rct-collapse rct-collapse-btn']\")\n        check_box_home_1.click()\n>       check_box_home_2 = driver.find_element(By.XPATH, \"(//*[@class='rct-collapse rct-collapse-btn'])[2])\")\n\ntest_class_work_7.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:766: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:380: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7c73a947e0e0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector\\\\nfrom javascript error: {\\...\\\\n#20 0x6421d5e34556 \\\\u003Cunknown>\\\\n#21 0x7c2b2ae9ca94 \\\\u003Cunknown>\\\\n#22 0x7c2b2af29c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector\nE       from javascript error: {\"status\":32,\"value\":\"Unable to locate an element with the xpath expression (//*[@class='rct-collapse rct-collapse-btn'])[2]) because of the following error:\\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '(//*[@class='rct-collapse rct-collapse-btn'])[2])' is not a valid XPath expression.\"}\nE         (Session info: chrome=130.0.6723.116); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#invalid-selector-exception\nE       Stacktrace:\nE       #0 0x6421d5e356da <unknown>\nE       #1 0x6421d5949f80 <unknown>\nE       #2 0x6421d594fcee <unknown>\nE       #3 0x6421d5951995 <unknown>\nE       #4 0x6421d5951a1c <unknown>\nE       #5 0x6421d59967a5 <unknown>\nE       #6 0x6421d5996de1 <unknown>\nE       #7 0x6421d59dc174 <unknown>\nE       #8 0x6421d59babdd <unknown>\nE       #9 0x6421d59d969d <unknown>\nE       #10 0x6421d59ba953 <unknown>\nE       #11 0x6421d598972e <unknown>\nE       #12 0x6421d598a79e <unknown>\nE       #13 0x6421d5e00f1b <unknown>\nE       #14 0x6421d5e04eb8 <unknown>\nE       #15 0x6421d5dee42c <unknown>\nE       #16 0x6421d5e05a37 <unknown>\nE       #17 0x6421d5dd2fef <unknown>\nE       #18 0x6421d5e23ad8 <unknown>\nE       #19 0x6421d5e23ca0 <unknown>\nE       #20 0x6421d5e34556 <unknown>\nE       #21 0x7c2b2ae9ca94 <unknown>\nE       #22 0x7c2b2af29c3c <unknown>\n\n../../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: InvalidSelectorException"}, "start": 1732212581772, "stop": 1732212609067, "uuid": "d0fdead1-20f0-4cc1-94f2-809a7c133a9b", "historyId": "4fb55e50bdef1a31665cbfd581234eb5", "testCaseId": "4fb55e50bdef1a31665cbfd581234eb5", "fullName": "test_class_work_7#test_check_box", "labels": [{"name": "feature", "value": "проверка чекбоксов"}, {"name": "story", "value": "проверка сайта"}, {"name": "suite", "value": "test_class_work_7"}, {"name": "host", "value": "mike-IdeaPad-Gaming-3-15ARH7"}, {"name": "thread", "value": "56294-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_class_work_7"}]}